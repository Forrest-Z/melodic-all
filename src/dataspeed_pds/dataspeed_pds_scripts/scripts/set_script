#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2017-2018, Dataspeed Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice,
#       this list of conditions and the following disclaimer in the documentation
#       and/or other materials provided with the distribution.
#     * Neither the name of Dataspeed Inc. nor the names of its
#       contributors may be used to endorse or promote products derived from this
#       software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import rospy
import sys
from dataspeed_pds_msgs.msg import Script

def main():
  msg = Script()
  try:
    if int(sys.argv[1]) > 2 or int(sys.argv[1]) < 0:
      raise ValueError("Request type out of bounds")
    else:
      msg.script = int(sys.argv[1])
  except ValueError:
    if sys.argv[1] == "startup":
      msg.script = 1
    elif sys.argv[1] == "shutdown":
      msg.script = 2
    elif sys.argv[1] == "none":
      msg.script = 0
    else:
      print("Error: Invalid value for script %s" % sys.argv[1])
      print("Try one of these:")
      print("    0, none, 1, startup, 2, shutdown")
  except IndexError:
    print("Error: Invalid or missing arguments.")
    print("Format:")
    print("    set_script <none/startup/shutdown>")
    return
  rospy.init_node('script', anonymous=True);
  pub = rospy.Publisher('/pds/script', Script, queue_size=1)
  rospy.sleep(0.5)
  pub.publish(msg)
  rospy.sleep(0.5)

if __name__ == '__main__':
    main()
